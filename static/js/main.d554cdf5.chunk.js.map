{"version":3,"sources":["components/NavBar.js","components/InfoCard.js","components/Map.js","App.js","store.js","index.js","data/bird_observations.csv","data/bird_data.csv","images/logo.JPG","../node_modules/kepler.gl/dist/localization sync /^/.//.*$"],"names":["NavBar","selectedSpecies","conservationStatus","nativeStatus","displayString","push","style","padding","background","color","borderRadius","Navbar","bg","expand","display","maxHeight","Brand","src","logo","width","height","alignItems","justifyContent","fontSize","flexDirection","map","el","margin","InfoCard","speciesCode","birdData","speciesName","useState","selectedBirdData","setSelectedBirdData","useEffect","Card","position","bottom","right","border","Img","variant","textAlign","Body","Title","fontWeight","Text","toFixed","Map","activeData","setActiveData","filteredData","setFilteredData","filtered","setFiltered","allSpecies","setAllSpecies","allConservation","setAllConservation","setSelectedSpecies","setConservationStatus","setNativeStatus","selectedCommonName","setSelectedCommonName","setBirdData","dispatch","useDispatch","fetchData","fetch","data","then","res","text","buildDataObject","Papa","parse","catch","err","console","log","fetchInfoData","infoData","buildBirdData","filterData","field","value","matchingSet","Set","Object","keys","key","add","dataToFilter","filteredDataRows","rows","filter","row","has","furtherFilteredData","fields","getSpeciesList","speciesSet","speciesList","speciesInfo","getConservationList","conservationSet","conservationList","conservationInfo","cols","birdDataObject","slice","localObj","i","length","lat","lon","day","month","year","count","dateTime","parseFloat","parseInt","name","format","type","addDataToMap","datasets","info","label","id","option","readOnly","config","mapStyle","styleType","centerMap","window","innerWidth","mapboxApiAccessToken","process","MAPBOX_KEY","innerHeight","onChange","e","target","selected","disabled","consStatus","cons","species","split","spec","onClick","fontStyle","keplerReducer","keplerGlReducer","initialState","uiState","activeSidePanel","currentModal","reducers","combineReducers","keplerGl","store","createStore","applyMiddleware","taskMiddleware","App","app","ReactDOM","render","document","getElementById","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve"],"mappings":"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","file":"static/js/main.d554cdf5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport logo from \"../images/logo.JPG\";\n\nconst NavBar = ({ selectedSpecies, conservationStatus, nativeStatus }) => {\n  const displayString = [];\n  if (nativeStatus) {\n    displayString.push(\n      <div\n        style={{\n          padding: 15,\n          background: \"brown\",\n          color: \"white\",\n          borderRadius: 15,\n        }}\n      >\n        {nativeStatus}\n      </div>\n    );\n  }\n  if (conservationStatus) {\n    displayString.push(\n      <div\n        style={{\n          padding: 15,\n          background: \"green\",\n          color: \"white\",\n          borderRadius: 15,\n        }}\n      >\n        {conservationStatus}\n      </div>\n    );\n  }\n  if (selectedSpecies) {\n    displayString.push(\n      <div\n        style={{\n          padding: 15,\n          background: \"orange\",\n          color: \"white\",\n          borderRadius: 15,\n        }}\n      >\n        {selectedSpecies}\n      </div>\n    );\n  }\n  return (\n    <Navbar bg=\"light\" expand=\"lg\" style={{ display: \"flex\", maxHeight: 100 }}>\n      <Navbar.Brand>\n        <img\n          src={logo}\n          style={{\n            width: 100,\n            height: 100,\n          }}\n        />\n      </Navbar.Brand>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          padding: \"0 15px\",\n          width: \"100%\",\n        }}\n      >\n        <p style={{ fontSize: \"2em\" }}>Hampton Roads Datathon 2022</p>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            fontSize: \"1.5em\",\n          }}\n        >\n          {displayString.map((el) => (\n            <div style={{ fontSize: \"0.8em\", margin: \"0 5px\" }}>{el}</div>\n          ))}\n        </div>\n      </div>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nconst InfoCard = ({ speciesCode, speciesName, birdData }) => {\n  const [selectedBirdData, setSelectedBirdData] = useState();\n\n  useEffect(() => {\n    if (birdData && speciesCode) {\n      setSelectedBirdData(birdData[speciesCode]);\n    }\n  }, [speciesCode, selectedBirdData]);\n\n  const convertToPercent = (val) => {\n    return (val * 100).toFixed(2);\n  };\n\n  if (selectedBirdData) {\n    return (\n      <Card\n        style={{\n          position: \"absolute\",\n          bottom: 30,\n          right: 30,\n          background: \"white\",\n          padding: 15,\n          borderRadius: 5,\n          border: \"1px solid gray\",\n        }}\n      >\n        <Card.Img\n          variant=\"top\"\n          style={{ maxHeight: 300, textAlign: \"center\" }}\n          src={selectedBirdData[\"image_url\"]}\n        />\n        <Card.Body>\n          <Card.Title style={{ fontWeight: \"bold\", textAlign: \"center\" }}>\n            {selectedBirdData[\"common_name\"]}\n          </Card.Title>\n          <Card.Text style={{ fontSize: \"0.8em\" }}>\n            Conservation Status: {selectedBirdData[\"cons_status\"]}\n            <br />\n            Native Stataus: {selectedBirdData[\"native\"]}\n            <br />\n            Quantity: {selectedBirdData[\"count_2020\"]} (2020){\" \"}\n            {selectedBirdData[\"count_2021\"]} (2020)\n            <br />\n            Change: {convertToPercent(selectedBirdData[\"perc_diff\"])}\n            {\"% \"}\n            {selectedBirdData[\"perc_diff\"] > 0 ? (\n              <span style={{ color: \"green\" }}>▲</span>\n            ) : (\n              <span style={{ color: \"red\" }}>▼</span>\n            )}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default InfoCard;\n","import React, { useEffect, useState } from \"react\";\nimport KeplerGl from \"kepler.gl\";\nimport { addDataToMap } from \"kepler.gl/actions\";\nimport data from \"../data/bird_observations.csv\";\nimport infoData from \"../data/bird_data.csv\";\nimport Papa from \"papaparse\";\nimport NavBar from \"./NavBar\";\nimport InfoCard from \"./InfoCard\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Map() {\n  const [activeData, setActiveData] = useState();\n  const [filteredData, setFilteredData] = useState();\n  const [filtered, setFiltered] = useState(false);\n  const [allSpecies, setAllSpecies] = useState([]);\n  const [allConservation, setAllConservation] = useState([]);\n  const [selectedSpecies, setSelectedSpecies] = useState();\n  const [conservationStatus, setConservationStatus] = useState();\n  const [nativeStatus, setNativeStatus] = useState();\n  const [selectedCommonName, setSelectedCommonName] = useState();\n  const [birdData, setBirdData] = useState();\n  const dispatch = useDispatch();\n\n  const fetchData = async () => {\n    fetch(data)\n      .then((res) =>\n        res.text().then((res) => buildDataObject(Papa.parse(res).data))\n      )\n      .catch((err) => console.log(\"err\", err));\n  };\n\n  const fetchInfoData = async () => {\n    fetch(infoData)\n      .then((res) =>\n        res.text().then((res) => buildBirdData(Papa.parse(res).data))\n      )\n      .catch((err) => console.log(\"err\", err));\n  };\n\n  const filterData = (field, value) => {\n    const matchingSet = new Set();\n    for (let key of Object.keys(birdData)) {\n      if (birdData[key][field] === value) {\n        matchingSet.add(key);\n      }\n    }\n    const dataToFilter = filtered ? filteredData : activeData;\n    const filteredDataRows = dataToFilter.rows.filter((row) =>\n      matchingSet.has(row[3])\n    );\n    const furtherFilteredData = {\n      fields: dataToFilter.fields,\n      rows: filteredDataRows,\n    };\n\n    setFiltered(true);\n    setFilteredData(furtherFilteredData);\n  };\n\n  const selectSpecies = (e) => {\n    const species = e.target.value;\n    const speciesCode = species.split(\"#\")[0];\n    const speciesName = species.split(\"#\")[1];\n    setSelectedSpecies(speciesCode);\n    setSelectedCommonName(speciesName);\n    filterData(\"species_code\", speciesCode);\n  };\n\n  const selectConservation = (e) => {\n    const consStatus = e.target.value;\n    setConservationStatus(consStatus);\n    filterData(\"cons_status\", consStatus);\n  };\n\n  const selectNative = (e) => {\n    const nativeStatus = e.target.value;\n    setNativeStatus(nativeStatus);\n    filterData(\"native\", nativeStatus);\n  };\n\n  const getSpeciesList = (data) => {\n    const speciesSet = new Set();\n    const speciesList = [];\n    const speciesIdx = 3;\n\n    for (let row of data) {\n      if (row[speciesIdx]) {\n        if (!birdData[row[speciesIdx]]) continue;\n        const speciesInfo = `${row[speciesIdx]}#${\n          birdData[row[speciesIdx]][\"common_name\"]\n        }`;\n        if (!speciesSet.has(speciesInfo)) {\n          speciesSet.add(speciesInfo);\n          speciesList.push(speciesInfo);\n        }\n      }\n    }\n\n    setAllSpecies(speciesList);\n  };\n\n  const getConservationList = (data) => {\n    const conservationSet = new Set();\n    const conservationList = [];\n    const conservationIdx = 3;\n\n    for (let row of data) {\n      if (row[conservationIdx]) {\n        if (!birdData[row[conservationIdx]]) continue;\n        const conservationInfo = birdData[row[conservationIdx]][\"cons_status\"];\n        if (!conservationSet.has(conservationInfo)) {\n          conservationSet.add(conservationInfo);\n          conservationList.push(conservationInfo);\n        }\n      }\n    }\n\n    setAllConservation(conservationList);\n  };\n\n  const buildBirdData = (data) => {\n    const cols = data[0];\n    const birdDataObject = {};\n\n    for (let row of data.slice(1)) {\n      if (row) {\n        const speciesCode = row[3];\n        const localObj = {};\n        for (let i = 0; i < cols.length; i++) {\n          localObj[cols[i]] = row[i];\n        }\n        birdDataObject[speciesCode] = localObj;\n      }\n    }\n    setBirdData(birdDataObject);\n  };\n\n  const buildDataObject = (data) => {\n    const fields = [\n      { name: \"latitude\", format: \"\", type: \"real\" },\n      { name: \"longitude\", format: \"\", type: \"real\" },\n      { name: \"observation_date\", format: \"YYYY-M-D H:m:s\", type: \"timestamp\" },\n      { name: \"species_code\", format: \"\" },\n      { name: \"count\", format: \"real\" },\n    ];\n    const rows = [];\n\n    for (let row of data.slice(1)) {\n      const lat = row[0];\n      const lon = row[1];\n      const day = row[5];\n      const month = row[4];\n      const year = row[3];\n      const speciesCode = row[2];\n      const count = row[6];\n      if (!lat || !lon || !day || !month || !year || !count || !speciesCode) {\n        continue;\n      }\n\n      const dateTime = `${year}-${month.length === 1 ? \"0\" + month : month}-${\n        day.length === 1 ? \"0\" + day : day\n      } 00:00:00`;\n\n      rows.push([\n        parseFloat(lat),\n        parseFloat(lon),\n        dateTime,\n        speciesCode,\n        parseInt(count),\n      ]);\n    }\n\n    const dataObject = {\n      fields,\n      rows,\n    };\n\n    setActiveData(dataObject);\n  };\n\n  useEffect(() => {\n    fetchData();\n    fetchInfoData();\n  }, []);\n\n  useEffect(() => {\n    if (activeData && birdData) {\n      if (filtered) {\n        getSpeciesList(filteredData.rows);\n        getConservationList(filteredData.rows);\n        dispatch(\n          addDataToMap({\n            datasets: {\n              info: {\n                label: \"Hampton Roads Birds Data\",\n                id: \"test_inat_data\",\n              },\n              data: filteredData,\n            },\n            option: {\n              readOnly: true,\n            },\n            config: {\n              mapStyle: {\n                styleType: \"light\",\n              },\n            },\n          })\n        );\n      } else {\n        getSpeciesList(activeData.rows);\n        getConservationList(activeData.rows);\n        dispatch(\n          addDataToMap({\n            datasets: {\n              info: {\n                label: \"Hampton Roads Bird Data\",\n                id: \"test_inat_data\",\n              },\n              data: activeData,\n            },\n            option: {\n              centerMap: true,\n              readOnly: true,\n            },\n            config: {\n              mapStyle: {\n                styleType: \"light\",\n              },\n            },\n          })\n        );\n      }\n    }\n  }, [dispatch, filtered, activeData, filteredData]);\n\n  return (\n    <>\n      <div style={{ position: \"relative\" }}>\n        <NavBar\n          selectedSpecies={selectedCommonName}\n          conservationStatus={conservationStatus}\n          nativeStatus={nativeStatus}\n        />\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <KeplerGl\n            id=\"map\"\n            width={window.innerWidth}\n            mapboxApiAccessToken={process.env.MAPBOX_KEY}\n            height={window.innerHeight - 100}\n          />\n          <div\n            style={{\n              margin: \"2em\",\n              width: \"30%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div>\n              <p>Native Status</p>\n              <select style={{ padding: 5 }} onChange={selectNative}>\n                <option\n                  value=\"none\"\n                  selected={!filtered || !nativeStatus ? true : false}\n                  disabled\n                >\n                  Select an Option\n                </option>\n                <option key=\"native\" value=\"Native\">\n                  Native\n                </option>\n                <option key=\"nonnative\" value=\"Non Native\">\n                  Non-Native\n                </option>\n              </select>\n              <p>Conservation Status</p>\n              <select style={{ padding: 5 }} onChange={selectConservation}>\n                <option\n                  value=\"none\"\n                  selected={!filtered || !conservationStatus ? true : false}\n                  disabled\n                >\n                  Select an Option\n                </option>\n                {allConservation.map((cons) => (\n                  <option\n                    key={cons}\n                    value={cons}\n                    selected={conservationStatus === cons ? true : false}\n                  >\n                    {cons}\n                  </option>\n                ))}\n              </select>\n              <p>Common Name</p>\n              <select style={{ padding: 5 }} onChange={selectSpecies}>\n                <option\n                  value=\"none\"\n                  selected={!filtered || !selectedSpecies ? true : false}\n                >\n                  Select an Option\n                </option>\n                {allSpecies.map((spec) => (\n                  <option\n                    key={spec.split(\"#\")[0]}\n                    selected={\n                      selectedCommonName === spec.split(\"#\")[1] ? true : false\n                    }\n                    value={spec}\n                  >\n                    {spec.split(\"#\")[1]}\n                  </option>\n                ))}\n              </select>\n              <br />\n              <br />\n              <button\n                style={{\n                  background: \"#006400\",\n                  color: \"white\",\n                  padding: 10,\n                  borderRadius: 5,\n                  border: \"none\",\n                }}\n                onClick={() => {\n                  setFiltered(false);\n                  setSelectedCommonName();\n                  setSelectedSpecies();\n                  setConservationStatus();\n                  setNativeStatus();\n                }}\n              >\n                Reset\n              </button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                fontSize: \"0.8em\",\n                fontStyle: \"italics\",\n              }}\n            >\n              Built by: Marti McElreath\n              <br />\n              Team members: Richard Latham, Marti McElreath, Raymond Hear,\n              Lakshmi Narayana\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedSpecies ? (\n        <InfoCard\n          speciesCode={selectedSpecies}\n          speciesName={selectedCommonName}\n          birdData={birdData}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default Map;\n","import React from \"react\";\nimport keplerGlReducer from \"kepler.gl/reducers\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { taskMiddleware } from \"react-palm/tasks\";\nimport { Provider } from \"react-redux\";\nimport Map from \"./components/Map\";\n\nconst keplerReducer = keplerGlReducer.initialState({\n  uiState: {\n    activeSidePanel: null,\n    currentModal: null,\n  },\n});\n\nconst reducers = combineReducers({\n  keplerGl: keplerReducer,\n});\n\nconst store = createStore(reducers, {}, applyMiddleware(taskMiddleware));\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Map />\n    </Provider>\n  );\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport keplerGlReducer from \"kepler.gl/reducers\";\nimport { taskMiddleware } from \"react-palm/tasks\";\n\nfunction appReducer() {\n  return {};\n}\nconst initialState = {};\n\nconst keplerReducer = keplerGlReducer.initialState({\n  uiState: {\n    activeSidePanel: null,\n    currentModal: null,\n  },\n});\n\nconst reducers = combineReducers({\n  keplerGl: keplerReducer,\n  app: appReducer,\n});\n\nexport default createStore(\n  reducers,\n  initialState,\n  applyMiddleware(taskMiddleware)\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/bird_observations.caca60dc.csv\";","module.exports = __webpack_public_path__ + \"static/media/bird_data.5d067252.csv\";","module.exports = __webpack_public_path__ + \"static/media/logo.04429955.JPG\";","var map = {\n\t\"./\": 47,\n\t\"./ca\": 603,\n\t\"./ca.js\": 603,\n\t\"./cn\": 604,\n\t\"./cn.js\": 604,\n\t\"./en\": 435,\n\t\"./en.js\": 435,\n\t\"./es\": 605,\n\t\"./es.js\": 605,\n\t\"./fi\": 606,\n\t\"./fi.js\": 606,\n\t\"./formatted-message\": 436,\n\t\"./formatted-message.js\": 436,\n\t\"./index\": 47,\n\t\"./index.js\": 47,\n\t\"./ja\": 607,\n\t\"./ja.js\": 607,\n\t\"./locales\": 125,\n\t\"./locales.js\": 125,\n\t\"./pt\": 608,\n\t\"./pt.js\": 608,\n\t\"./ru\": 609,\n\t\"./ru.js\": 609\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 992;"],"sourceRoot":""}